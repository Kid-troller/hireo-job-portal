# Generated by Django 5.2.2 on 2025-09-03 03:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0006_resumevolunteerexperience_resumelanguage'),
    ]

    operations = [
        migrations.CreateModel(
            name='InterviewAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('voice_file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('input_type', models.CharField(choices=[('text', 'Text Input'), ('voice', 'Voice Input'), ('mixed', 'Mixed Input')], default='text', max_length=10)),
                ('response_time', models.IntegerField(help_text='Time taken to answer in seconds')),
                ('content_score', models.FloatField(default=0.0, help_text='Content relevance and completeness (0-100)')),
                ('clarity_score', models.FloatField(default=0.0, help_text='Clarity and structure (0-100)')),
                ('confidence_score', models.FloatField(default=0.0, help_text='Confidence and tone (0-100)')),
                ('keyword_score', models.FloatField(default=0.0, help_text='Keyword usage (0-100)')),
                ('overall_score', models.FloatField(default=0.0, help_text='Overall score (0-100)')),
                ('strengths', models.JSONField(default=list, help_text='List of identified strengths')),
                ('weaknesses', models.JSONField(default=list, help_text='List of areas for improvement')),
                ('suggestions', models.JSONField(default=list, help_text='Specific improvement suggestions')),
                ('alternative_phrases', models.JSONField(default=list, help_text='Suggested alternative phrasings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='InterviewQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('category', models.CharField(choices=[('behavioral', 'Behavioral'), ('technical', 'Technical'), ('situational', 'Situational'), ('competency', 'Competency'), ('industry_specific', 'Industry Specific'), ('leadership', 'Leadership'), ('problem_solving', 'Problem Solving'), ('communication', 'Communication')], max_length=20)),
                ('industry', models.CharField(choices=[('technology', 'Technology'), ('finance', 'Finance'), ('healthcare', 'Healthcare'), ('marketing', 'Marketing'), ('sales', 'Sales'), ('education', 'Education'), ('consulting', 'Consulting'), ('engineering', 'Engineering'), ('design', 'Design'), ('operations', 'Operations'), ('general', 'General')], default='general', max_length=20)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=15)),
                ('model_answer', models.TextField()),
                ('guidance_tips', models.TextField()),
                ('keywords', models.JSONField(default=list, help_text='Important keywords for this question')),
                ('time_limit', models.IntegerField(default=120, help_text='Recommended time limit in seconds')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['category', 'difficulty', 'question_text'],
            },
        ),
        migrations.CreateModel(
            name='InterviewAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sessions', models.IntegerField(default=0)),
                ('total_questions_answered', models.IntegerField(default=0)),
                ('total_practice_time', models.IntegerField(default=0, help_text='Total practice time in minutes')),
                ('average_score', models.FloatField(default=0.0)),
                ('best_score', models.FloatField(default=0.0)),
                ('improvement_rate', models.FloatField(default=0.0, help_text='Improvement percentage over time')),
                ('behavioral_avg_score', models.FloatField(default=0.0)),
                ('technical_avg_score', models.FloatField(default=0.0)),
                ('situational_avg_score', models.FloatField(default=0.0)),
                ('communication_avg_score', models.FloatField(default=0.0)),
                ('confidence_trend', models.JSONField(default=list, help_text='Confidence scores over time')),
                ('clarity_trend', models.JSONField(default=list, help_text='Clarity scores over time')),
                ('content_trend', models.JSONField(default=list, help_text='Content scores over time')),
                ('current_streak', models.IntegerField(default=0, help_text='Current daily practice streak')),
                ('longest_streak', models.IntegerField(default=0, help_text='Longest daily practice streak')),
                ('achievements', models.JSONField(default=list, help_text='Unlocked achievements')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='interview_analytics', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('strength', 'Strength'), ('improvement', 'Area for Improvement'), ('suggestion', 'Suggestion'), ('tip', 'Pro Tip')], max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.IntegerField(default=1, help_text='Priority level (1-5)')),
                ('is_actionable', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detailed_feedback', to='accounts.interviewanswer')),
            ],
            options={
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='interviewanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.interviewquestion'),
        ),
        migrations.CreateModel(
            name='InterviewSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('practice', 'Practice Session'), ('mock_interview', 'Mock Interview'), ('quick_practice', 'Quick Practice'), ('timed_challenge', 'Timed Challenge')], default='practice', max_length=20)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('paused', 'Paused'), ('abandoned', 'Abandoned')], default='in_progress', max_length=15)),
                ('industry_focus', models.CharField(choices=[('technology', 'Technology'), ('finance', 'Finance'), ('healthcare', 'Healthcare'), ('marketing', 'Marketing'), ('sales', 'Sales'), ('education', 'Education'), ('consulting', 'Consulting'), ('engineering', 'Engineering'), ('design', 'Design'), ('operations', 'Operations'), ('general', 'General')], default='general', max_length=20)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=15)),
                ('total_questions', models.IntegerField(default=5)),
                ('questions_answered', models.IntegerField(default=0)),
                ('overall_score', models.FloatField(blank=True, null=True)),
                ('session_duration', models.IntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interview_sessions', to='accounts.userprofile')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='interviewanswer',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='accounts.interviewsession'),
        ),
    ]
